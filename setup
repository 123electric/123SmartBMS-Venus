#!/bin/bash

#	123 SmartBMS
#	setup script (install/uninstall)
#
# this script will accept the following commands on the command line:
#	setup install
#	setup uninstall
#	setup reinstall (used to reinstall after Venus OS update)

#### following line incorporates SetupHelper utilities into this script
# Refer to the SetupHelper ReadMe file for details.

source "/data/SetupHelper/CommonResources"

stop_smartbms_ttys() {
	ls /dev | grep ttyUSB | while read -r line ; do
		dev_name=`udevadm info --query=property --name=$line | sed -n s/^ID_MODEL=//p`
		if [ "$dev_name" = "SmartBMSToUSB" ]; then
			/opt/victronenergy/serial-starter/stop-tty.sh $line
		fi
	done
}

start_smartbms_ttys() {
	ls /dev | grep ttyUSB | while read -r line ; do
		dev_name=`udevadm info --query=property --name=$line | sed -n s/^ID_MODEL=//p`
		if [ "$dev_name" = "SmartBMSToUSB" ]; then
			/opt/victronenergy/serial-starter/start-tty.sh $line
		fi
	done
}


#### end of lines to include SetupHelper

rulesFile="/etc/udev/rules.d/serial-starter.rules"
ruleToAdd='ACTION=="add", ENV{ID_BUS}=="usb", ENV{ID_MODEL}=="SmartBMSToUSB", ENV{VE_SERVICE}="smartbms"'

confToAdd='service smartbms        smartbms-dbus'
confFile=/etc/venus/serial-starter.conf
serialStarterCacheDir='/data/var/lib/serial-starter'


tempFile="$scriptDir/tempFile"

if [ $scriptAction == 'INSTALL' ] ; then

	if [ $(grep -c "$ruleToAdd" "$rulesFile") == 0 ]; then
		cp $rulesFile $tempFile
		echo $ruleToAdd >> "$tempFile"
		updateActiveFile "$tempFile" "$rulesFile"
		rm -f "$tempFile"
	fi

	if [ $(grep -c "$confToAdd" "$confFile") == 0 ]; then
		cp $confFile $tempFile
		echo $confToAdd >> "$tempFile"
		updateActiveFile "$tempFile" "$confFile"
		rm -f "$tempFile"
	fi
	
	# Remove legacy files
	if [ -f "/data/rc.local" ]; then
		sed -i -e 's|/data/smartbms/reinstall||g' /data/rc.local
	fi
	
	rm -rf /data/smartbms
	rm -rf /data/smartbms-venus
	# End removing legacy files
	
	# Remove folder, if available, accidentally copied by SetupHelper
	rm -rf /data/SetupHelper/.git
	
	# If called for first time, remove install path
	if [ -f "/data/rcS.local" ]; then
		sed -i -e 's|/data/123SmartBMS-Venus/setup reinstall||g' /data/rcS.local
	fi
	
	# Install worker service template to be used by serial-starter
	rm -rf /opt/victronenergy/service-templates/smartbms-dbus
	mkdir /opt/victronenergy/service-templates/smartbms-dbus
	cp -r /data/123SmartBMS-Venus/workerService/* /opt/victronenergy/service-templates/smartbms-dbus
	
	# Install manager service
	installService $packageName
	
	versionStringToNumber "v2.90~3"
	tempFsStartVersion=$versionNumber
	versionStringToNumber $venusVersion
	if  (( $versionNumber >= $tempFsStartVersion )) ; then
		# Start procedure to make udev and Serial Starter recognise the USB cable without reboot
		#Tell Serial Starter to unlock the SmartBMS tty if already locked
		stop_smartbms_ttys
		#Remove Serial Starter cache because it contains old information
		rm -rf $serialStarterCacheDir
		
		# Let udev and serial-starter reread the modified rules
		udevadm trigger --action=add
		svc -t /service/serial-starter
		
		start_smartbms_ttys
	else
		rebootNeeded=true
	fi
fi

if [ $scriptAction == 'UNINSTALL' ] ; then
	restoreActiveFile "$rulesFile"
	restoreActiveFile "$confFile"
	
	# remove service template
	rm -rf /opt/victronenergy/service-templates/smartbms-dbus
	
	stop_smartbms_ttys
	# Remove manager service
	removeService $packageName
	
	# Let udev and serial-starter reread the modified rules
	udevadm trigger
	svc -t /service/serial-starter
fi
endScript
